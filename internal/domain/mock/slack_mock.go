// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/slack.go

// Package mock_domain is a generated GoMock package.
package mock_domain

import (
	context "context"
	domain "go-app/internal/domain"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSlackUsecase is a mock of SlackUsecase interface.
type MockSlackUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockSlackUsecaseMockRecorder
}

// MockSlackUsecaseMockRecorder is the mock recorder for MockSlackUsecase.
type MockSlackUsecaseMockRecorder struct {
	mock *MockSlackUsecase
}

// NewMockSlackUsecase creates a new mock instance.
func NewMockSlackUsecase(ctrl *gomock.Controller) *MockSlackUsecase {
	mock := &MockSlackUsecase{ctrl: ctrl}
	mock.recorder = &MockSlackUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSlackUsecase) EXPECT() *MockSlackUsecaseMockRecorder {
	return m.recorder
}

// HandleAppMentionEvent mocks base method.
func (m *MockSlackUsecase) HandleAppMentionEvent(arg0 context.Context, arg1 *domain.SlackAppMentionEvent) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandleAppMentionEvent", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendMessage mocks base method.
func (m *MockSlackUsecase) SendMessage(ctx context.Context, channel string, content string, mentionUser string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendMessage", ctx, channel, content, mentionUser)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// HandleAppMentionEvent indicates an expected call of HandleAppMentionEvent.
func (mr *MockSlackUsecaseMockRecorder) HandleAppMentionEvent(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleAppMentionEvent", reflect.TypeOf((*MockSlackUsecase)(nil).HandleAppMentionEvent), arg0, arg1)
}

// SendMessage indicates an expected call of SendMessage.
func (mr *MockSlackUsecaseMockRecorder) SendMessage(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendMessage", reflect.TypeOf((*MockSlackUsecase)(nil).SendMessage), arg0, arg1)
}
